{"ast":null,"code":"import { Booking } from '../booking.model';\nimport { SubSink } from 'subsink';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../booking.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"src/app/driver/driver.service\";\nimport * as i4 from \"src/app/goodsType/goods-type.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"primeng/dropdown\";\nconst _c0 = function () {\n  return {\n    \"width\": \"100%\"\n  };\n};\nexport class BookingFormComponent {\n  constructor(service, toaster, dservice, gservice) {\n    this.service = service;\n    this.toaster = toaster;\n    this.dservice = dservice;\n    this.gservice = gservice;\n    this.subs = new SubSink();\n    this.driverList = new Array();\n    this.goodsTypeList = new Array();\n  }\n  ngOnInit() {\n    this.loadDriverList();\n  }\n  loadDriverList() {\n    this.subs.sink = this.dservice.GetDriverDetails().subscribe(response => {\n      this.driverList = response.drivers;\n    });\n  }\n  loadGoodsTypeList() {\n    this.subs.sink = this.gservice.GetGoodsTypeDetails().subscribe(response => {\n      this.goodsTypeList = response.goodsTypes;\n    });\n  }\n  onSubmit(form) {\n    if (this.service.formData.numBookingID == 0 || this.service.formData.numBookingID === undefined) this.insertRecord(form);else this.updateRecord(form);\n  }\n  insertRecord(form) {\n    this.service.PostBookingDetail().subscribe(res => {\n      this.resetForm(form);\n      this.toaster.success('Successfully Saved.', 'Booking Details');\n      this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n        this.service.list = response.bookings;\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  updateRecord(form) {\n    this.service.PutBookingtDetail().subscribe(res => {\n      this.resetForm(form);\n      this.toaster.warning('Successfully Updated.', 'Booking Details');\n      this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n        this.service.list = response.bookings;\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  resetForm(form) {\n    form.form.reset();\n    this.service.formData = new Booking();\n  }\n}\nBookingFormComponent.ɵfac = function BookingFormComponent_Factory(t) {\n  return new (t || BookingFormComponent)(i0.ɵɵdirectiveInject(i1.BookingService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.DriverService), i0.ɵɵdirectiveInject(i4.GoodsTypeService));\n};\nBookingFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BookingFormComponent,\n  selectors: [[\"app-booking-form\"]],\n  decls: 56,\n  vars: 29,\n  consts: [[\"novalidate\", \"\", \"autocomplete\", \"off\", 3, \"submit\"], [\"form\", \"ngForm\"], [\"type\", \"hidden\", \"name\", \"numBookingID\", 3, \"value\"], [1, \"form-row\"], [1, \"form-group\", \"col-md-6\"], [1, \"text-danger\"], [\"placeholder\", \"From...\", \"name\", \"varFromAddress\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"varFromAddress\", \"ngModel\"], [\"placeholder\", \"To...\", \"name\", \"varToAddress\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"varToAddress\", \"ngModel\"], [\"placeholder\", \"Distance...\", \"name\", \"numDistance\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"numDistance\", \"ngModel\"], [1, \"from-grop\", \"col-md-6\"], [\"id\", \"driver\", \"optionLabel\", \"varDriverName\", \"optionValue\", \"numDriverID\", \"name\", \"item\", \"placeholder\", \"Driver\", 3, \"options\", \"ngModel\", \"required\", \"ngModelChange\"], [1, \"from-grop\", \"col-md-4\"], [\"id\", \"goodsType\", \"optionLabel\", \"varGoodsTypeName\", \"optionValue\", \"numGoodsTypeID\", \"name\", \"goodsType\", \"placeholder\", \"Goods Type\", 3, \"options\", \"ngModel\", \"required\", \"ngModelChange\"], [1, \"form-group\", \"col-md-4\"], [\"placeholder\", \"KG...\", \"name\", \"numWeight\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"numWeight\", \"ngModel\"], [\"placeholder\", \"numPrice...\", \"name\", \"numPrice\", \"readonly\", \"\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"numPrice\", \"ngModel\"], [1, \"form-group\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function BookingFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function BookingFormComponent_Template_form_submit_0_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelement(2, \"input\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"label\");\n      i0.ɵɵtext(6, \"From\");\n      i0.ɵɵelementStart(7, \"sup\", 5);\n      i0.ɵɵtext(8, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.service.formData.varFromAddress = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\");\n      i0.ɵɵtext(13, \"To\");\n      i0.ɵɵelementStart(14, \"sup\", 5);\n      i0.ɵɵtext(15, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.service.formData.varToAddress = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 3)(19, \"div\", 4)(20, \"label\");\n      i0.ɵɵtext(21, \"Distance (KM)\");\n      i0.ɵɵelementStart(22, \"sup\", 5);\n      i0.ɵɵtext(23, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.service.formData.numDistance = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 12)(27, \"label\");\n      i0.ɵɵtext(28, \"Select Driver\");\n      i0.ɵɵelementStart(29, \"sup\", 5);\n      i0.ɵɵtext(30, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"p-dropdown\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_p_dropdown_ngModelChange_31_listener($event) {\n        return ctx.service.formData.numDriverID = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"div\", 3)(33, \"div\", 14)(34, \"label\");\n      i0.ɵɵtext(35, \"Select Goods Type\");\n      i0.ɵɵelementStart(36, \"sup\", 5);\n      i0.ɵɵtext(37, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"p-dropdown\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_p_dropdown_ngModelChange_38_listener($event) {\n        return ctx.service.formData.numGoodsTypeID = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"div\", 16)(40, \"label\");\n      i0.ɵɵtext(41, \"Weight\");\n      i0.ɵɵelementStart(42, \"sup\", 5);\n      i0.ɵɵtext(43, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"input\", 17, 18);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_44_listener($event) {\n        return ctx.service.formData.numWeight = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(46, \"div\", 16)(47, \"label\");\n      i0.ɵɵtext(48, \"Price\");\n      i0.ɵɵelementStart(49, \"sup\", 5);\n      i0.ɵɵtext(50, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(51, \"input\", 19, 20);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_51_listener($event) {\n        return ctx.service.formData.numPrice = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(53, \"div\", 21)(54, \"button\", 22);\n      i0.ɵɵtext(55, \"SUBMIT\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      const _r1 = i0.ɵɵreference(10);\n      const _r2 = i0.ɵɵreference(17);\n      const _r3 = i0.ɵɵreference(25);\n      const _r4 = i0.ɵɵreference(45);\n      const _r5 = i0.ɵɵreference(52);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", ctx.service.formData.numBookingID);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r1.invalid && _r1.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.varFromAddress);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r2.invalid && _r2.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.varToAddress);\n      i0.ɵɵadvance(8);\n      i0.ɵɵclassProp(\"invalid\", _r3.invalid && _r3.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.numDistance);\n      i0.ɵɵadvance(7);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(27, _c0));\n      i0.ɵɵproperty(\"options\", ctx.driverList)(\"ngModel\", ctx.service.formData.numDriverID)(\"required\", true);\n      i0.ɵɵadvance(7);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(28, _c0));\n      i0.ɵɵproperty(\"options\", ctx.goodsTypeList)(\"ngModel\", ctx.service.formData.numGoodsTypeID)(\"required\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"invalid\", _r4.invalid && _r4.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.numWeight);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r5.invalid && _r5.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.numPrice);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm, i6.Dropdown],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Booking","SubSink","BookingFormComponent","constructor","service","toaster","dservice","gservice","driverList","Array","goodsTypeList","ngOnInit","loadDriverList","subs","sink","GetDriverDetails","subscribe","response","drivers","loadGoodsTypeList","GetGoodsTypeDetails","goodsTypes","onSubmit","form","formData","numBookingID","undefined","insertRecord","updateRecord","PostBookingDetail","res","resetForm","success","GetBookingDetails","list","bookings","err","console","log","PutBookingtDetail","warning","reset","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\ESyAdmin\\Desktop\\QualitApps\\ParcelDistributer\\ParcelDistribute.Client\\src\\app\\booking\\booking-form\\booking-form.component.ts","C:\\Users\\ESyAdmin\\Desktop\\QualitApps\\ParcelDistributer\\ParcelDistribute.Client\\src\\app\\booking\\booking-form\\booking-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Booking } from '../booking.model';\nimport { NgForm } from '@angular/forms';\nimport { BookingService } from '../booking.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { SubSink } from 'subsink';\nimport { Driver } from 'src/app/driver/driver.model';\nimport { DriverService } from 'src/app/driver/driver.service';\nimport { GoodsType } from 'src/app/goodsType/goods-type.model';\nimport { GoodsTypeService } from 'src/app/goodsType/goods-type.service';\n\n@Component({\n  selector: 'app-booking-form',\n  templateUrl: './booking-form.component.html',\n  styles: [\n  ]\n})\nexport class BookingFormComponent implements OnInit {\n  driverList!: Driver[];\n  goodsTypeList!: GoodsType[];\n  subs = new SubSink();\n\n  constructor(public service: BookingService, private toaster: ToastrService, public dservice: DriverService, \n    public gservice: GoodsTypeService) {\n    this.driverList = new Array<Driver>();\n    this.goodsTypeList = new Array<GoodsType>();\n  }\n\n  ngOnInit(): void {\n    this.loadDriverList();\n  }\n\n  loadDriverList() {\n    this.subs.sink = this.dservice.GetDriverDetails().subscribe(response => {\n      this.driverList = response.drivers;\n    });\n  }\n\n  loadGoodsTypeList() {\n    this.subs.sink = this.gservice.GetGoodsTypeDetails().subscribe(response => {\n      this.goodsTypeList = response.goodsTypes;\n    });\n  }\n  \n  onSubmit(form: NgForm){\n    if(this.service.formData.numBookingID == 0 || this.service.formData.numBookingID === undefined)\n    this.insertRecord(form);\n    else\n      this.updateRecord(form);\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.PostBookingDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toaster.success('Successfully Saved.', 'Booking Details');\n        this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n          this.service.list = response.bookings;\n        });\n      },\n      err => { console.log(err); }\n    )\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.PutBookingtDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toaster.warning('Successfully Updated.', 'Booking Details');\n        this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n          this.service.list = response.bookings;\n        });\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  resetForm(form: NgForm) {\n    form.form.reset();\n    this.service.formData = new Booking();\n  }\n}\n","<form novalidate autocomplete=\"off\" #form=\"ngForm\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"numBookingID\" [value]=\"service.formData.numBookingID\" />\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label>From<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control form-control-lg\" placeholder=\"From...\" name=\"varFromAddress\"\n                #varFromAddress=\"ngModel\" [(ngModel)]=\"service.formData.varFromAddress\"\n                required [class.invalid]=\"varFromAddress.invalid &#038;&#038; varFromAddress.touched\">\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label>To<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control form-control-lg\" placeholder=\"To...\" name=\"varToAddress\"\n            #varToAddress=\"ngModel\" [(ngModel)]=\"service.formData.varToAddress\"\n            required [class.invalid]=\"varToAddress.invalid &#038;&#038; varToAddress.touched\">\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label>Distance (KM)<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control form-control-lg\" placeholder=\"Distance...\" name=\"numDistance\"\n                #numDistance=\"ngModel\" [(ngModel)]=\"service.formData.numDistance\"\n                required [class.invalid]=\"numDistance.invalid &#038;&#038; numDistance.touched\">\n        </div>\n        <div class=\"from-grop col-md-6\">\n            <label>Select Driver<sup class=\"text-danger\">*</sup></label>\n            <p-dropdown id=\"driver\" [options]=\"driverList\" [style]=\"{'width':'100%'}\"\n                optionLabel=\"varDriverName\" optionValue=\"numDriverID\" name=\"item\"\n                [(ngModel)]=\"service.formData.numDriverID\" placeholder=\"Driver\"\n                [required]=\"true\">\n            </p-dropdown>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"from-grop col-md-4\">\n            <label>Select Goods Type<sup class=\"text-danger\">*</sup></label>\n            <p-dropdown id=\"goodsType\" [options]=\"goodsTypeList\" [style]=\"{'width':'100%'}\"\n                optionLabel=\"varGoodsTypeName\" optionValue=\"numGoodsTypeID\" name=\"goodsType\"\n                [(ngModel)]=\"service.formData.numGoodsTypeID\" placeholder=\"Goods Type\"\n                [required]=\"true\">\n            </p-dropdown>\n        </div>\n        <div class=\"form-group col-md-4\">\n            <label>Weight<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control form-control-lg\" placeholder=\"KG...\" name=\"numWeight\"\n            #numWeight=\"ngModel\" [(ngModel)]=\"service.formData.numWeight\"\n            required [class.invalid]=\"numWeight.invalid &#038;&#038; numWeight.touched\">\n        </div>\n        <div class=\"form-group col-md-4\">\n            <label>Price<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control form-control-lg\" placeholder=\"numPrice...\" name=\"numPrice\"\n                #numPrice=\"ngModel\" [(ngModel)]=\"service.formData.numPrice\" readonly\n                required [class.invalid]=\"numPrice.invalid &#038;&#038; numPrice.touched\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"form.invalid\">SUBMIT</button>\n    </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}