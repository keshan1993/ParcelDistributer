{"ast":null,"code":"import { Customer } from '../customer.model';\nimport { SubSink } from 'subsink';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../customer.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/forms\";\nexport class CustomerFormComponent {\n  constructor(service, toaster) {\n    this.service = service;\n    this.toaster = toaster;\n    this.subs = new SubSink();\n  }\n  ngOnInit() {}\n  onSubmit(form) {\n    if (this.service.formData.numCustomerID == 0 || this.service.formData.numCustomerID === undefined) this.insertRecord(form);else this.updateRecord(form);\n  }\n  insertRecord(form) {\n    this.service.PostCustomerDetail().subscribe(res => {\n      this.resetForm(form);\n      this.toaster.success('Successfully Saved.', 'Customer Details');\n      this.subs.sink = this.service.GetCustomerDetails().subscribe(response => {\n        this.service.list = response.customers;\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  updateRecord(form) {\n    this.service.PutCustomertDetail().subscribe(res => {\n      this.resetForm(form);\n      this.toaster.warning('Successfully Updated.', 'Customer Details');\n      this.subs.sink = this.service.GetCustomerDetails().subscribe(response => {\n        this.service.list = response.Customers;\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  resetForm(form) {\n    form.form.reset();\n    this.service.formData = new Customer();\n  }\n}\nCustomerFormComponent.ɵfac = function CustomerFormComponent_Factory(t) {\n  return new (t || CustomerFormComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.ToastrService));\n};\nCustomerFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomerFormComponent,\n  selectors: [[\"app-customer-form\"]],\n  decls: 36,\n  vars: 14,\n  consts: [[\"novalidate\", \"\", \"autocomplete\", \"off\", 3, \"submit\"], [\"form\", \"ngForm\"], [\"type\", \"hidden\", \"name\", \"numCustomerID\", 3, \"value\"], [1, \"form-row\"], [1, \"form-group\", \"col-md-6\"], [1, \"text-danger\"], [\"placeholder\", \"Name...\", \"name\", \"varCustomerName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"varCustomerName\", \"ngModel\"], [\"placeholder\", \"Address...\", \"name\", \"varCustomerAddress\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"varCustomerAddress\", \"ngModel\"], [\"placeholder\", \"NIC...\", \"name\", \"varCustomerNIC\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"varCustomerNIC\", \"ngModel\"], [\"placeholder\", \"No...\", \"name\", \"varCustomerContactNo\", \"type\", \"number\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"varCustomerContactNo\", \"ngModel\"], [1, \"form-group\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-lg\", \"btn-block\", 3, \"disabled\"]],\n  template: function CustomerFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function CustomerFormComponent_Template_form_submit_0_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelement(2, \"input\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"label\");\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementStart(7, \"sup\", 5);\n      i0.ɵɵtext(8, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerFormComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.service.formData.varCustomerName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\");\n      i0.ɵɵtext(13, \"Address\");\n      i0.ɵɵelementStart(14, \"sup\", 5);\n      i0.ɵɵtext(15, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerFormComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.service.formData.varCustomerAddress = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 3)(19, \"div\", 4)(20, \"label\");\n      i0.ɵɵtext(21, \"NIC\");\n      i0.ɵɵelementStart(22, \"sup\", 5);\n      i0.ɵɵtext(23, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerFormComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.service.formData.varCustomerNIC = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 4)(27, \"label\");\n      i0.ɵɵtext(28, \"Contact No\");\n      i0.ɵɵelementStart(29, \"sup\", 5);\n      i0.ɵɵtext(30, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"input\", 12, 13);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerFormComponent_Template_input_ngModelChange_31_listener($event) {\n        return ctx.service.formData.varCustomerContactNo = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(33, \"div\", 14)(34, \"button\", 15);\n      i0.ɵɵtext(35, \"SUBMIT\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      const _r1 = i0.ɵɵreference(10);\n      const _r2 = i0.ɵɵreference(17);\n      const _r3 = i0.ɵɵreference(25);\n      const _r4 = i0.ɵɵreference(32);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", ctx.service.formData.numCustomerID);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r1.invalid && _r1.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.varCustomerName);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r2.invalid && _r2.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.varCustomerAddress);\n      i0.ɵɵadvance(8);\n      i0.ɵɵclassProp(\"invalid\", _r3.invalid && _r3.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.varCustomerNIC);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r4.invalid && _r4.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.varCustomerContactNo);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Customer","SubSink","CustomerFormComponent","constructor","service","toaster","ngOnInit","onSubmit","form","formData","numCustomerID","undefined","insertRecord","updateRecord","PostCustomerDetail","subscribe","res","resetForm","success","subs","sink","GetCustomerDetails","response","list","customers","err","console","log","PutCustomertDetail","warning","Customers","reset","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\ESyAdmin\\Desktop\\QualitApps\\ParcelDistributer\\ParcelDistribute.Client\\src\\app\\customer\\customer-form\\customer-form.component.ts","C:\\Users\\ESyAdmin\\Desktop\\QualitApps\\ParcelDistributer\\ParcelDistribute.Client\\src\\app\\customer\\customer-form\\customer-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../customer.service';\nimport { NgForm } from '@angular/forms';\nimport { Customer } from '../customer.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { SubSink } from 'subsink';\n\n@Component({\n  selector: 'app-customer-form',\n  templateUrl: './customer-form.component.html',\n  styles: [\n  ]\n})\nexport class CustomerFormComponent implements OnInit {\n\n  subs = new SubSink();\n\n  constructor(public service: CustomerService, private toaster: ToastrService) {}\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form: NgForm){\n    if(this.service.formData.numCustomerID == 0 || this.service.formData.numCustomerID === undefined)\n    this.insertRecord(form);\n    else\n      this.updateRecord(form);\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.PostCustomerDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toaster.success('Successfully Saved.', 'Customer Details');\n        this.subs.sink = this.service.GetCustomerDetails().subscribe(response => {\n          this.service.list = response.customers;\n        });\n      },\n      err => { console.log(err); }\n    )\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.PutCustomertDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toaster.warning('Successfully Updated.', 'Customer Details');\n        this.subs.sink = this.service.GetCustomerDetails().subscribe(response => {\n          this.service.list = response.Customers;\n        });\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  resetForm(form: NgForm) {\n    form.form.reset();\n    this.service.formData = new Customer();\n  }\n}\n","<form novalidate autocomplete=\"off\" #form=\"ngForm\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"numCustomerID\" [value]=\"service.formData.numCustomerID\" />\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label>Name<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control\" placeholder=\"Name...\" name=\"varCustomerName\"\n                #varCustomerName=\"ngModel\" [(ngModel)]=\"service.formData.varCustomerName\"\n                required [class.invalid]=\"varCustomerName.invalid &#038;&#038; varCustomerName.touched\">\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label>Address<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control\" placeholder=\"Address...\" name=\"varCustomerAddress\"\n            #varCustomerAddress=\"ngModel\" [(ngModel)]=\"service.formData.varCustomerAddress\"\n            required [class.invalid]=\"varCustomerAddress.invalid &#038;&#038; varCustomerAddress.touched\">\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label>NIC<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control\" placeholder=\"NIC...\" name=\"varCustomerNIC\"\n                #varCustomerNIC=\"ngModel\" [(ngModel)]=\"service.formData.varCustomerNIC\"\n                required [class.invalid]=\"varCustomerNIC.invalid &#038;&#038; varCustomerNIC.touched\">\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label>Contact No<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control\" placeholder=\"No...\" name=\"varCustomerContactNo\"\n            #varCustomerContactNo=\"ngModel\" [(ngModel)]=\"service.formData.varCustomerContactNo\" type=\"number\"\n            required [class.invalid]=\"varCustomerContactNo.invalid &#038;&#038; varCustomerContactNo.touched\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-lg btn-block\" type=\"submit\" [disabled]=\"form.invalid\">SUBMIT</button>\n    </div>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}