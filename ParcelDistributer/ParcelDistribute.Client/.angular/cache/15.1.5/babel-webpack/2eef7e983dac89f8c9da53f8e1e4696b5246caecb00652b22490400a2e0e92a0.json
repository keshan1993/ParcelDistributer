{"ast":null,"code":"import { Booking } from '../booking.model';\nimport { SubSink } from 'subsink';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../booking.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"src/app/driver/driver.service\";\nimport * as i4 from \"src/app/goodsType/goods-type.service\";\nimport * as i5 from \"src/app/customer/customer.service\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"primeng/dropdown\";\nconst _c0 = function () {\n  return {\n    \"width\": \"100%\"\n  };\n};\nexport class BookingFormComponent {\n  constructor(service, toaster, dservice, gservice, cservice) {\n    this.service = service;\n    this.toaster = toaster;\n    this.dservice = dservice;\n    this.gservice = gservice;\n    this.cservice = cservice;\n    this.subs = new SubSink();\n    this.driverList = new Array();\n    this.goodsTypeList = new Array();\n    this.customerList = new Array();\n  }\n  ngOnInit() {\n    // this.loadDriverList();\n    this.loadGoodsTypeList();\n    this.loadCustomerList();\n  }\n  loadCustomerList() {\n    this.subs.sink = this.cservice.GetCustomerDetails().subscribe(response => {\n      this.customerList = response.customers;\n    });\n  }\n  // loadDriverList() {\n  //   this.subs.sink = this.dservice.GetDriverDetails().subscribe(response => {\n  //     this.driverList = response.drivers;\n  //   });\n  // }\n  loadAvailableDriverList(event) {\n    const dtDeliveryDate = new Date(event.target.value);\n    if (event.target.value instanceof Date && !isNaN(event.target.value) == true) {\n      this.subs.sink = this.dservice.GetAvailableDrivers(event.target.value).subscribe(response => {\n        this.driverList = response.drivers;\n      });\n      console.log(\"valid\");\n    } else {\n      console.log(\"Notvalid\");\n    }\n  }\n  loadGoodsTypeList() {\n    this.subs.sink = this.gservice.GetGoodsTypeDetails().subscribe(response => {\n      this.goodsTypeList = response.goodsTypes;\n    });\n  }\n  onSubmit(form) {\n    if (this.service.formData.numBookingID == 0 || this.service.formData.numBookingID === undefined) this.insertRecord(form);else this.updateRecord(form);\n  }\n  insertRecord(form) {\n    this.service.PostBookingDetail().subscribe(res => {\n      this.resetForm(form);\n      this.toaster.success('Successfully Saved.', 'Booking Details');\n      this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n        this.service.list = response.bookings;\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  updateRecord(form) {\n    this.service.PutBookingtDetail().subscribe(res => {\n      this.resetForm(form);\n      this.toaster.warning('Successfully Updated.', 'Booking Details');\n      this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n        this.service.list = response.bookings;\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  resetForm(form) {\n    form.form.reset();\n    this.service.formData = new Booking();\n  }\n}\nBookingFormComponent.ɵfac = function BookingFormComponent_Factory(t) {\n  return new (t || BookingFormComponent)(i0.ɵɵdirectiveInject(i1.BookingService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.DriverService), i0.ɵɵdirectiveInject(i4.GoodsTypeService), i0.ɵɵdirectiveInject(i5.CustomerService));\n};\nBookingFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BookingFormComponent,\n  selectors: [[\"app-booking-form\"]],\n  decls: 69,\n  vars: 38,\n  consts: [[\"novalidate\", \"\", \"autocomplete\", \"off\", 3, \"submit\"], [\"form\", \"ngForm\"], [\"type\", \"hidden\", \"name\", \"numBookingID\", 3, \"value\"], [1, \"form-row\"], [1, \"from-grop\", \"col-md-4\"], [1, \"text-danger\"], [\"id\", \"customer\", \"optionLabel\", \"varCustomerName\", \"optionValue\", \"numCustomerID\", \"name\", \"customer\", \"placeholder\", \"Customer\", 3, \"options\", \"ngModel\", \"required\", \"ngModelChange\"], [1, \"form-group\", \"col-md-4\"], [\"placeholder\", \"YYYY/MM/DD...\", \"name\", \"dtDeliveryDate\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\", \"keyup\"], [\"dtDeliveryDate\", \"ngModel\"], [\"id\", \"driver\", \"optionLabel\", \"varDriverName\", \"optionValue\", \"numDriverID\", \"name\", \"item\", \"placeholder\", \"Driver\", 3, \"options\", \"ngModel\", \"required\", \"ngModelChange\"], [1, \"form-row\", 2, \"margin-top\", \"10px\"], [\"placeholder\", \"From...\", \"name\", \"varFromAddress\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"varFromAddress\", \"ngModel\"], [\"placeholder\", \"To...\", \"name\", \"varToAddress\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"varToAddress\", \"ngModel\"], [\"placeholder\", \"Distance...\", \"name\", \"numDistance\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"numDistance\", \"ngModel\"], [\"id\", \"goodsType\", \"optionLabel\", \"varGoodsTypeName\", \"optionValue\", \"numGoodsTypeID\", \"name\", \"goodsType\", \"placeholder\", \"Goods Type\", 3, \"options\", \"ngModel\", \"required\", \"ngModelChange\"], [\"placeholder\", \"Weight...\", \"name\", \"numWeight\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"numWeight\", \"ngModel\"], [\"placeholder\", \"numPrice...\", \"name\", \"numPrice\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"numPrice\", \"ngModel\"], [1, \"form-group\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function BookingFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function BookingFormComponent_Template_form_submit_0_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelement(2, \"input\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"label\");\n      i0.ɵɵtext(6, \"Select Customer\");\n      i0.ɵɵelementStart(7, \"sup\", 5);\n      i0.ɵɵtext(8, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"p-dropdown\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_p_dropdown_ngModelChange_9_listener($event) {\n        return ctx.service.formData.numCustomerID = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 7)(11, \"label\");\n      i0.ɵɵtext(12, \"Delivery Date\");\n      i0.ɵɵelementStart(13, \"sup\", 5);\n      i0.ɵɵtext(14, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.service.formData.dtDeliveryDate = $event;\n      })(\"keyup\", function BookingFormComponent_Template_input_keyup_15_listener($event) {\n        return ctx.loadAvailableDriverList($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 4)(18, \"label\");\n      i0.ɵɵtext(19, \"Select Driver\");\n      i0.ɵɵelementStart(20, \"sup\", 5);\n      i0.ɵɵtext(21, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"p-dropdown\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_p_dropdown_ngModelChange_22_listener($event) {\n        return ctx.service.formData.numDriverID = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"div\", 11)(24, \"div\", 7)(25, \"label\");\n      i0.ɵɵtext(26, \"From\");\n      i0.ɵɵelementStart(27, \"sup\", 5);\n      i0.ɵɵtext(28, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"input\", 12, 13);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_29_listener($event) {\n        return ctx.service.formData.varFromAddress = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 7)(32, \"label\");\n      i0.ɵɵtext(33, \"To\");\n      i0.ɵɵelementStart(34, \"sup\", 5);\n      i0.ɵɵtext(35, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"input\", 14, 15);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_36_listener($event) {\n        return ctx.service.formData.varToAddress = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"div\", 7)(39, \"label\");\n      i0.ɵɵtext(40, \"Distance (KM)\");\n      i0.ɵɵelementStart(41, \"sup\", 5);\n      i0.ɵɵtext(42, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"input\", 16, 17);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_43_listener($event) {\n        return ctx.service.formData.numDistance = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(45, \"div\", 11)(46, \"div\", 4)(47, \"label\");\n      i0.ɵɵtext(48, \"Select Goods Type\");\n      i0.ɵɵelementStart(49, \"sup\", 5);\n      i0.ɵɵtext(50, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(51, \"p-dropdown\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_p_dropdown_ngModelChange_51_listener($event) {\n        return ctx.service.formData.numGoodsTypeID = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(52, \"div\", 7)(53, \"label\");\n      i0.ɵɵtext(54, \"Weight (KG)\");\n      i0.ɵɵelementStart(55, \"sup\", 5);\n      i0.ɵɵtext(56, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(57, \"input\", 19, 20);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_57_listener($event) {\n        return ctx.service.formData.numWeight = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(59, \"div\", 7)(60, \"label\");\n      i0.ɵɵtext(61, \"Price\");\n      i0.ɵɵelementStart(62, \"sup\", 5);\n      i0.ɵɵtext(63, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(64, \"input\", 21, 22);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_64_listener($event) {\n        return ctx.service.formData.numPrice = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(66, \"div\", 23)(67, \"button\", 24);\n      i0.ɵɵtext(68, \"SUBMIT\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      const _r1 = i0.ɵɵreference(16);\n      const _r2 = i0.ɵɵreference(30);\n      const _r3 = i0.ɵɵreference(37);\n      const _r4 = i0.ɵɵreference(44);\n      const _r5 = i0.ɵɵreference(58);\n      const _r6 = i0.ɵɵreference(65);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", ctx.service.formData.numBookingID);\n      i0.ɵɵadvance(7);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(35, _c0));\n      i0.ɵɵproperty(\"options\", ctx.customerList)(\"ngModel\", ctx.service.formData.numCustomerID)(\"required\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"invalid\", _r1.invalid && _r1.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.dtDeliveryDate);\n      i0.ɵɵadvance(7);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(36, _c0));\n      i0.ɵɵproperty(\"options\", ctx.driverList)(\"ngModel\", ctx.service.formData.numDriverID)(\"required\", true);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r2.invalid && _r2.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.varFromAddress);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r3.invalid && _r3.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.varToAddress);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r4.invalid && _r4.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.numDistance);\n      i0.ɵɵadvance(8);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(37, _c0));\n      i0.ɵɵproperty(\"options\", ctx.goodsTypeList)(\"ngModel\", ctx.service.formData.numGoodsTypeID)(\"required\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"invalid\", _r5.invalid && _r5.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.numWeight);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r6.invalid && _r6.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.numPrice);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm, i7.Dropdown],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Booking","SubSink","BookingFormComponent","constructor","service","toaster","dservice","gservice","cservice","driverList","Array","goodsTypeList","customerList","ngOnInit","loadGoodsTypeList","loadCustomerList","subs","sink","GetCustomerDetails","subscribe","response","customers","loadAvailableDriverList","event","dtDeliveryDate","Date","target","value","isNaN","GetAvailableDrivers","drivers","console","log","GetGoodsTypeDetails","goodsTypes","onSubmit","form","formData","numBookingID","undefined","insertRecord","updateRecord","PostBookingDetail","res","resetForm","success","GetBookingDetails","list","bookings","err","PutBookingtDetail","warning","reset","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\ESyAdmin\\Desktop\\QualitApps\\ParcelDistributer\\ParcelDistribute.Client\\src\\app\\booking\\booking-form\\booking-form.component.ts","C:\\Users\\ESyAdmin\\Desktop\\QualitApps\\ParcelDistributer\\ParcelDistribute.Client\\src\\app\\booking\\booking-form\\booking-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Booking } from '../booking.model';\nimport { NgForm } from '@angular/forms';\nimport { BookingService } from '../booking.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { SubSink } from 'subsink';\nimport { Driver } from 'src/app/driver/driver.model';\nimport { DriverService } from 'src/app/driver/driver.service';\nimport { GoodsType } from 'src/app/goodsType/goods-type.model';\nimport { GoodsTypeService } from 'src/app/goodsType/goods-type.service';\nimport { Customer } from 'src/app/customer/customer.model';\nimport { CustomerService } from 'src/app/customer/customer.service';\n\n@Component({\n  selector: 'app-booking-form',\n  templateUrl: './booking-form.component.html',\n  styles: [\n  ]\n})\nexport class BookingFormComponent implements OnInit {\n  customerList!: Customer[];\n  driverList!: Driver[];\n  goodsTypeList!: GoodsType[];\n  subs = new SubSink();\n\n  constructor(public service: BookingService, private toaster: ToastrService, public dservice: DriverService, \n    public gservice: GoodsTypeService, public cservice: CustomerService) {\n    this.driverList = new Array<Driver>();\n    this.goodsTypeList = new Array<GoodsType>();\n    this.customerList = new Array<Customer>();\n  }\n\n  ngOnInit(): void {\n    // this.loadDriverList();\n    this.loadGoodsTypeList();\n    this.loadCustomerList();\n  }\n\n  loadCustomerList() {\n    this.subs.sink = this.cservice.GetCustomerDetails().subscribe(response => {\n      this.customerList = response.customers;\n    });\n  }\n\n  // loadDriverList() {\n  //   this.subs.sink = this.dservice.GetDriverDetails().subscribe(response => {\n  //     this.driverList = response.drivers;\n  //   });\n  // }\n\n  loadAvailableDriverList(event: any) {\n\n    const dtDeliveryDate = new Date(event.target.value);\n    if(event.target.value instanceof Date && !isNaN(event.target.value) == true) {\n      this.subs.sink = this.dservice.GetAvailableDrivers(event.target.value).subscribe(response => {\n        this.driverList = response.drivers;\n      });\n      console.log(\"valid\");\n    }\n    else{\n      console.log(\"Notvalid\");\n    }\n  }\n\n  loadGoodsTypeList() {\n    this.subs.sink = this.gservice.GetGoodsTypeDetails().subscribe(response => {\n      this.goodsTypeList = response.goodsTypes;\n    });\n  }\n  \n  onSubmit(form: NgForm){\n    if(this.service.formData.numBookingID == 0 || this.service.formData.numBookingID === undefined)\n    this.insertRecord(form);\n    else\n      this.updateRecord(form);\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.PostBookingDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toaster.success('Successfully Saved.', 'Booking Details');\n        this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n          this.service.list = response.bookings;\n        });\n      },\n      err => { console.log(err); }\n    )\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.PutBookingtDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toaster.warning('Successfully Updated.', 'Booking Details');\n        this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n          this.service.list = response.bookings;\n        });\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  resetForm(form: NgForm) {\n    form.form.reset();\n    this.service.formData = new Booking();\n  }\n}\n","<form novalidate autocomplete=\"off\" #form=\"ngForm\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"numBookingID\" [value]=\"service.formData.numBookingID\" />\n    <div class=\"form-row\">\n        <div class=\"from-grop col-md-4\">\n            <label>Select Customer<sup class=\"text-danger\">*</sup></label>\n            <p-dropdown id=\"customer\" [options]=\"customerList\" [style]=\"{'width':'100%'}\"\n                optionLabel=\"varCustomerName\" optionValue=\"numCustomerID\" name=\"customer\"\n                [(ngModel)]=\"service.formData.numCustomerID\" placeholder=\"Customer\"\n                [required]=\"true\">\n            </p-dropdown>\n        </div>\n        <div class=\"form-group col-md-4\">\n            <label>Delivery Date<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control form-control-lg\" placeholder=\"YYYY/MM/DD...\" name=\"dtDeliveryDate\"\n                #dtDeliveryDate=\"ngModel\" [(ngModel)]=\"service.formData.dtDeliveryDate\" (keyup)=\"loadAvailableDriverList($event)\"\n                required [class.invalid]=\"dtDeliveryDate.invalid &#038;&#038; dtDeliveryDate.touched\">\n        </div>\n        <div class=\"from-grop col-md-4\">\n            <label>Select Driver<sup class=\"text-danger\">*</sup></label>\n            <p-dropdown id=\"driver\" [options]=\"driverList\" [style]=\"{'width':'100%'}\"\n                optionLabel=\"varDriverName\" optionValue=\"numDriverID\" name=\"item\"\n                [(ngModel)]=\"service.formData.numDriverID\" placeholder=\"Driver\"\n                [required]=\"true\">\n            </p-dropdown>\n        </div>\n    </div>\n    <div class=\"form-row\" style=\"margin-top: 10px;\">\n        <div class=\"form-group col-md-4\">\n            <label>From<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control form-control-lg\" placeholder=\"From...\" name=\"varFromAddress\"\n                #varFromAddress=\"ngModel\" [(ngModel)]=\"service.formData.varFromAddress\"\n                required [class.invalid]=\"varFromAddress.invalid &#038;&#038; varFromAddress.touched\">\n        </div>\n        <div class=\"form-group col-md-4\">\n            <label>To<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control form-control-lg\" placeholder=\"To...\" name=\"varToAddress\"\n            #varToAddress=\"ngModel\" [(ngModel)]=\"service.formData.varToAddress\"\n            required [class.invalid]=\"varToAddress.invalid &#038;&#038; varToAddress.touched\">\n        </div> \n        <div class=\"form-group col-md-4\">\n            <label>Distance (KM)<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control form-control-lg\" placeholder=\"Distance...\" name=\"numDistance\"\n                #numDistance=\"ngModel\" [(ngModel)]=\"service.formData.numDistance\"\n                required [class.invalid]=\"numDistance.invalid &#038;&#038; numDistance.touched\">\n        </div>\n    </div>\n    <div class=\"form-row\" style=\"margin-top: 10px;\">\n        <div class=\"from-grop col-md-4\">\n            <label>Select Goods Type<sup class=\"text-danger\">*</sup></label>\n            <p-dropdown id=\"goodsType\" [options]=\"goodsTypeList\" [style]=\"{'width':'100%'}\"\n                optionLabel=\"varGoodsTypeName\" optionValue=\"numGoodsTypeID\" name=\"goodsType\"\n                [(ngModel)]=\"service.formData.numGoodsTypeID\" placeholder=\"Goods Type\"\n                [required]=\"true\">\n            </p-dropdown>\n        </div>\n        <div class=\"form-group col-md-4\">\n            <label>Weight (KG)<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control form-control-lg\" placeholder=\"Weight...\" name=\"numWeight\"\n            #numWeight=\"ngModel\" [(ngModel)]=\"service.formData.numWeight\"\n            required [class.invalid]=\"numWeight.invalid &#038;&#038; numWeight.touched\">\n        </div>\n        <div class=\"form-group col-md-4\">\n            <label>Price<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control form-control-lg\" placeholder=\"numPrice...\" name=\"numPrice\"\n                #numPrice=\"ngModel\" [(ngModel)]=\"service.formData.numPrice\"\n                required [class.invalid]=\"numPrice.invalid &#038;&#038; numPrice.touched\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"form.invalid\">SUBMIT</button>\n    </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}