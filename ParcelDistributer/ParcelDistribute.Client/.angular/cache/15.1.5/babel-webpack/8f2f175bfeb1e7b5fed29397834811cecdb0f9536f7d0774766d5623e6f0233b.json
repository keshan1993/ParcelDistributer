{"ast":null,"code":"import { Driver } from '../driver.model';\nimport { SubSink } from 'subsink';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../driver.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/forms\";\nexport class DriverFormComponent {\n  constructor(service, toaster) {\n    this.service = service;\n    this.toaster = toaster;\n    this.subs = new SubSink();\n  }\n  ngOnInit() {}\n  onSubmit(form) {\n    if (this.service.formData.numDriverID == 0 || this.service.formData.numDriverID === undefined) this.insertRecord(form);else this.updateRecord(form);\n  }\n  insertRecord(form) {\n    this.service.PostDriverDetail().subscribe(res => {\n      this.resetForm(form);\n      this.toaster.success('Successfully Saved.', 'Driver Details');\n      this.subs.sink = this.service.GetDriverDetails().subscribe(response => {\n        this.service.list = response.drivers;\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  updateRecord(form) {\n    this.service.PutDrivertDetail().subscribe(res => {\n      this.resetForm(form);\n      this.toaster.warning('Successfully Updated.', 'Driver Details');\n      this.subs.sink = this.service.GetDriverDetails().subscribe(response => {\n        this.service.list = response.drivers;\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  resetForm(form) {\n    form.form.reset();\n    this.service.formData = new Driver();\n  }\n}\nDriverFormComponent.ɵfac = function DriverFormComponent_Factory(t) {\n  return new (t || DriverFormComponent)(i0.ɵɵdirectiveInject(i1.DriverService), i0.ɵɵdirectiveInject(i2.ToastrService));\n};\nDriverFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DriverFormComponent,\n  selectors: [[\"app-driver-form\"]],\n  decls: 36,\n  vars: 14,\n  consts: [[\"novalidate\", \"\", \"autocomplete\", \"off\", 3, \"submit\"], [\"form\", \"ngForm\"], [\"type\", \"hidden\", \"name\", \"numDriverID\", 3, \"value\"], [1, \"form-row\"], [1, \"form-group\", \"col-md-6\"], [1, \"text-danger\"], [\"placeholder\", \"Name...\", \"name\", \"varDriverName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"varDriverName\", \"ngModel\"], [\"placeholder\", \"Address...\", \"name\", \"varDriverAddress\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"varDriverAddress\", \"ngModel\"], [\"placeholder\", \"NIC...\", \"name\", \"varDriverNIC\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"varDriverNIC\", \"ngModel\"], [\"placeholder\", \"No...\", \"name\", \"varDriverContactNo\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"varDriverContactNo\", \"ngModel\"], [1, \"form-group\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function DriverFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function DriverFormComponent_Template_form_submit_0_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelement(2, \"input\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"label\");\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementStart(7, \"sup\", 5);\n      i0.ɵɵtext(8, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function DriverFormComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.service.formData.varDriverName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\");\n      i0.ɵɵtext(13, \"Address\");\n      i0.ɵɵelementStart(14, \"sup\", 5);\n      i0.ɵɵtext(15, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function DriverFormComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.service.formData.varDriverAddress = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 3)(19, \"div\", 4)(20, \"label\");\n      i0.ɵɵtext(21, \"NIC\");\n      i0.ɵɵelementStart(22, \"sup\", 5);\n      i0.ɵɵtext(23, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function DriverFormComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.service.formData.varDriverNIC = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 4)(27, \"label\");\n      i0.ɵɵtext(28, \"Contact No\");\n      i0.ɵɵelementStart(29, \"sup\", 5);\n      i0.ɵɵtext(30, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"input\", 12, 13);\n      i0.ɵɵlistener(\"ngModelChange\", function DriverFormComponent_Template_input_ngModelChange_31_listener($event) {\n        return ctx.service.formData.varDriverContactNo = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(33, \"div\", 14)(34, \"button\", 15);\n      i0.ɵɵtext(35, \"SUBMIT\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      const _r1 = i0.ɵɵreference(10);\n      const _r2 = i0.ɵɵreference(17);\n      const _r3 = i0.ɵɵreference(25);\n      const _r4 = i0.ɵɵreference(32);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", ctx.service.formData.numDriverID);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r1.invalid && _r1.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.varDriverName);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r2.invalid && _r2.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.varDriverAddress);\n      i0.ɵɵadvance(8);\n      i0.ɵɵclassProp(\"invalid\", _r3.invalid && _r3.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.varDriverNIC);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r4.invalid && _r4.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.varDriverContactNo);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Driver","SubSink","DriverFormComponent","constructor","service","toaster","ngOnInit","onSubmit","form","formData","numDriverID","undefined","insertRecord","updateRecord","PostDriverDetail","subscribe","res","resetForm","success","subs","sink","GetDriverDetails","response","list","drivers","err","console","log","PutDrivertDetail","warning","reset","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\ESyAdmin\\Desktop\\QualitApps\\ParcelDistributer\\ParcelDistribute.Client\\src\\app\\driver\\driver-form\\driver-form.component.ts","C:\\Users\\ESyAdmin\\Desktop\\QualitApps\\ParcelDistributer\\ParcelDistribute.Client\\src\\app\\driver\\driver-form\\driver-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DriverService } from '../driver.service';\nimport { NgForm } from '@angular/forms';\nimport { Driver } from '../driver.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { SubSink } from 'subsink';\n\n@Component({\n  selector: 'app-driver-form',\n  templateUrl: './driver-form.component.html',\n  styles: [\n  ]\n})\nexport class DriverFormComponent implements OnInit {\n\n  subs = new SubSink();\n\n  constructor(public service: DriverService, private toaster: ToastrService) {}\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form: NgForm){\n    if(this.service.formData.numDriverID == 0 || this.service.formData.numDriverID === undefined)\n    this.insertRecord(form);\n    else\n      this.updateRecord(form);\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.PostDriverDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toaster.success('Successfully Saved.', 'Driver Details');\n        this.subs.sink = this.service.GetDriverDetails().subscribe(response => {\n          this.service.list = response.drivers;\n        });\n      },\n      err => { console.log(err); }\n    )\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.PutDrivertDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toaster.warning('Successfully Updated.', 'Driver Details');\n        this.subs.sink = this.service.GetDriverDetails().subscribe(response => {\n          this.service.list = response.drivers;\n        });\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  resetForm(form: NgForm) {\n    form.form.reset();\n    this.service.formData = new Driver();\n  }\n}\n","<form novalidate autocomplete=\"off\" #form=\"ngForm\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"numDriverID\" [value]=\"service.formData.numDriverID\" />\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label>Name<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control\" placeholder=\"Name...\" name=\"varDriverName\"\n                #varDriverName=\"ngModel\" [(ngModel)]=\"service.formData.varDriverName\"\n                required [class.invalid]=\"varDriverName.invalid &#038;&#038; varDriverName.touched\">\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label>Address<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control\" placeholder=\"Address...\" name=\"varDriverAddress\"\n            #varDriverAddress=\"ngModel\" [(ngModel)]=\"service.formData.varDriverAddress\"\n            required [class.invalid]=\"varDriverAddress.invalid &#038;&#038; varDriverAddress.touched\">\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label>NIC<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control\" placeholder=\"NIC...\" name=\"varDriverNIC\"\n                #varDriverNIC=\"ngModel\" [(ngModel)]=\"service.formData.varDriverNIC\"\n                required [class.invalid]=\"varDriverNIC.invalid &#038;&#038; varDriverNIC.touched\">\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label>Contact No<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control\" placeholder=\"No...\" name=\"varDriverContactNo\"\n            #varDriverContactNo=\"ngModel\" [(ngModel)]=\"service.formData.varDriverContactNo\"\n            required [class.invalid]=\"varDriverContactNo.invalid &#038;&#038; varDriverContactNo.touched\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"form.invalid\">SUBMIT</button>\n    </div>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}