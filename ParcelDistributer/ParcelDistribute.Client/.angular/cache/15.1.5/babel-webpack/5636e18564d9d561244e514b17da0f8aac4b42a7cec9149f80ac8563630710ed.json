{"ast":null,"code":"import { Booking } from '../booking.model';\nimport { SubSink } from 'subsink';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../booking.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"src/app/driver/driver.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"primeng/dropdown\";\nconst _c0 = function () {\n  return {\n    \"width\": \"100%\"\n  };\n};\nexport class BookingFormComponent {\n  constructor(service, toaster, dservice) {\n    this.service = service;\n    this.toaster = toaster;\n    this.dservice = dservice;\n    this.subs = new SubSink();\n    this.driverList = new Array();\n  }\n  ngOnInit() {\n    this.loadDriverList();\n  }\n  loadDriverList() {\n    this.subs.sink = this.dservice.GetDriverDetails().subscribe(response => {\n      this.driverList = response.items;\n    });\n  }\n  onSubmit(form) {\n    if (this.service.formData.numBookingID == 0 || this.service.formData.numBookingID === undefined) this.insertRecord(form);else this.updateRecord(form);\n  }\n  insertRecord(form) {\n    this.service.PostBookingDetail().subscribe(res => {\n      this.resetForm(form);\n      this.toaster.success('Successfully Saved.', 'Booking Details');\n      this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n        this.service.list = response.bookings;\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  updateRecord(form) {\n    this.service.PutBookingtDetail().subscribe(res => {\n      this.resetForm(form);\n      this.toaster.warning('Successfully Updated.', 'Booking Details');\n      this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n        this.service.list = response.bookings;\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n  resetForm(form) {\n    form.form.reset();\n    this.service.formData = new Booking();\n  }\n}\nBookingFormComponent.ɵfac = function BookingFormComponent_Factory(t) {\n  return new (t || BookingFormComponent)(i0.ɵɵdirectiveInject(i1.BookingService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.DriverService));\n};\nBookingFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BookingFormComponent,\n  selectors: [[\"app-booking-form\"]],\n  decls: 57,\n  vars: 26,\n  consts: [[\"novalidate\", \"\", \"autocomplete\", \"off\", 3, \"submit\"], [\"form\", \"ngForm\"], [\"type\", \"hidden\", \"name\", \"numBookingID\", 3, \"value\"], [1, \"form-row\"], [1, \"form-group\", \"col-md-6\"], [1, \"text-danger\"], [\"placeholder\", \"From...\", \"name\", \"varFromAddress\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"varFromAddress\", \"ngModel\"], [\"placeholder\", \"To...\", \"name\", \"varToAddress\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"varToAddress\", \"ngModel\"], [\"placeholder\", \"Distance...\", \"name\", \"numDistance\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"numDistance\", \"ngModel\"], [1, \"from-grop\", \"col-md-6\"], [\"id\", \"item\", \"optionLabel\", \"varItemName\", \"optionValue\", \"numDriverID\", \"name\", \"item\", \"placeholder\", \"Select Coffee\", 3, \"options\", \"ngModel\", \"required\", \"ngModelChange\", \"onChange\"], [1, \"from-grop\", \"col-md-4\"], [1, \"form-group\", \"col-md-4\"], [\"placeholder\", \"KG...\", \"name\", \"numWeight\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"numWeight\", \"ngModel\"], [\"placeholder\", \"numPrice...\", \"name\", \"numPrice\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"numPrice\", \"ngModel\"], [1, \"form-group\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function BookingFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"submit\", function BookingFormComponent_Template_form_submit_0_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelement(2, \"input\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"label\");\n      i0.ɵɵtext(6, \"From\");\n      i0.ɵɵelementStart(7, \"sup\", 5);\n      i0.ɵɵtext(8, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.service.formData.varFromAddress = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\");\n      i0.ɵɵtext(13, \"To\");\n      i0.ɵɵelementStart(14, \"sup\", 5);\n      i0.ɵɵtext(15, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.service.formData.varToAddress = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 3)(19, \"div\", 4)(20, \"label\");\n      i0.ɵɵtext(21, \"Distance\");\n      i0.ɵɵelementStart(22, \"sup\", 5);\n      i0.ɵɵtext(23, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.service.formData.numDistance = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 12)(27, \"label\");\n      i0.ɵɵtext(28, \"Select Driver\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"br\");\n      i0.ɵɵelementStart(30, \"p-dropdown\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_p_dropdown_ngModelChange_30_listener($event) {\n        return ctx.service.formData.numDriverID = $event;\n      })(\"onChange\", function BookingFormComponent_Template_p_dropdown_onChange_30_listener($event) {\n        return ctx.CalculatePrice($event);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"div\", 3);\n      i0.ɵɵelement(32, \"div\", 14);\n      i0.ɵɵelementStart(33, \"div\", 15)(34, \"label\");\n      i0.ɵɵtext(35, \"Weight\");\n      i0.ɵɵelementStart(36, \"sup\", 5);\n      i0.ɵɵtext(37, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"input\", 16, 17);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_38_listener($event) {\n        return ctx.service.formData.numWeight = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(40, \"div\", 15)(41, \"label\");\n      i0.ɵɵtext(42, \"Price\");\n      i0.ɵɵelementStart(43, \"sup\", 5);\n      i0.ɵɵtext(44, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(45, \"input\", 18, 19);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_45_listener($event) {\n        return ctx.service.formData.numPrice = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(47, \"div\", 15)(48, \"label\");\n      i0.ɵɵtext(49, \"Weight\");\n      i0.ɵɵelementStart(50, \"sup\", 5);\n      i0.ɵɵtext(51, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(52, \"input\", 16, 17);\n      i0.ɵɵlistener(\"ngModelChange\", function BookingFormComponent_Template_input_ngModelChange_52_listener($event) {\n        return ctx.service.formData.numWeight = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(54, \"div\", 20)(55, \"button\", 21);\n      i0.ɵɵtext(56, \"SUBMIT\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      const _r1 = i0.ɵɵreference(10);\n      const _r2 = i0.ɵɵreference(17);\n      const _r3 = i0.ɵɵreference(25);\n      const _r4 = i0.ɵɵreference(39);\n      const _r5 = i0.ɵɵreference(46);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", ctx.service.formData.numBookingID);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r1.invalid && _r1.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.varFromAddress);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r2.invalid && _r2.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.varToAddress);\n      i0.ɵɵadvance(8);\n      i0.ɵɵclassProp(\"invalid\", _r3.invalid && _r3.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.numDistance);\n      i0.ɵɵadvance(6);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(25, _c0));\n      i0.ɵɵproperty(\"options\", ctx.itemsList)(\"ngModel\", ctx.service.formData.numDriverID)(\"required\", true);\n      i0.ɵɵadvance(8);\n      i0.ɵɵclassProp(\"invalid\", _r4.invalid && _r4.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.numWeight);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r5.invalid && _r5.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.numPrice);\n      i0.ɵɵadvance(7);\n      i0.ɵɵclassProp(\"invalid\", _r4.invalid && _r4.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.formData.numWeight);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i5.Dropdown],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Booking","SubSink","BookingFormComponent","constructor","service","toaster","dservice","driverList","Array","ngOnInit","loadDriverList","subs","sink","GetDriverDetails","subscribe","response","items","onSubmit","form","formData","numBookingID","undefined","insertRecord","updateRecord","PostBookingDetail","res","resetForm","success","GetBookingDetails","list","bookings","err","console","log","PutBookingtDetail","warning","reset","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\ESyAdmin\\Desktop\\QualitApps\\ParcelDistributer\\ParcelDistribute.Client\\src\\app\\booking\\booking-form\\booking-form.component.ts","C:\\Users\\ESyAdmin\\Desktop\\QualitApps\\ParcelDistributer\\ParcelDistribute.Client\\src\\app\\booking\\booking-form\\booking-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Booking } from '../booking.model';\nimport { NgForm } from '@angular/forms';\nimport { BookingService } from '../booking.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { SubSink } from 'subsink';\nimport { Driver } from 'src/app/driver/driver.model';\nimport { DriverService } from 'src/app/driver/driver.service';\n\n@Component({\n  selector: 'app-booking-form',\n  templateUrl: './booking-form.component.html',\n  styles: [\n  ]\n})\nexport class BookingFormComponent implements OnInit {\n  driverList!: Driver[];\n  subs = new SubSink();\n\n  constructor(public service: BookingService, private toaster: ToastrService, public dservice: DriverService) {\n    this.driverList = new Array<Driver>();\n  }\n\n  ngOnInit(): void {\n    this.loadDriverList();\n  }\n\n  loadDriverList() {\n    this.subs.sink = this.dservice.GetDriverDetails().subscribe(response => {\n      this.driverList = response.items;\n    });\n  }\n  \n  onSubmit(form: NgForm){\n    if(this.service.formData.numBookingID == 0 || this.service.formData.numBookingID === undefined)\n    this.insertRecord(form);\n    else\n      this.updateRecord(form);\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.PostBookingDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toaster.success('Successfully Saved.', 'Booking Details');\n        this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n          this.service.list = response.bookings;\n        });\n      },\n      err => { console.log(err); }\n    )\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.PutBookingtDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toaster.warning('Successfully Updated.', 'Booking Details');\n        this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n          this.service.list = response.bookings;\n        });\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  resetForm(form: NgForm) {\n    form.form.reset();\n    this.service.formData = new Booking();\n  }\n}\n","<form novalidate autocomplete=\"off\" #form=\"ngForm\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"numBookingID\" [value]=\"service.formData.numBookingID\" />\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label>From<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control \" placeholder=\"From...\" name=\"varFromAddress\"\n                #varFromAddress=\"ngModel\" [(ngModel)]=\"service.formData.varFromAddress\"\n                required [class.invalid]=\"varFromAddress.invalid &#038;&#038; varFromAddress.touched\">\n        </div>\n        <div class=\"form-group col-md-6\">\n            <label>To<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control \" placeholder=\"To...\" name=\"varToAddress\"\n            #varToAddress=\"ngModel\" [(ngModel)]=\"service.formData.varToAddress\"\n            required [class.invalid]=\"varToAddress.invalid &#038;&#038; varToAddress.touched\">\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label>Distance<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control \" placeholder=\"Distance...\" name=\"numDistance\"\n                #numDistance=\"ngModel\" [(ngModel)]=\"service.formData.numDistance\"\n                required [class.invalid]=\"numDistance.invalid &#038;&#038; numDistance.touched\">\n        </div>\n        <div class=\"from-grop col-md-6\">\n            <label>Select Driver</label><br>\n            <p-dropdown id=\"item\" [options]=\"itemsList\" [style]=\"{'width':'100%'}\"\n                optionLabel=\"varItemName\" optionValue=\"numDriverID\" name=\"item\"\n                [(ngModel)]=\"service.formData.numDriverID\" placeholder=\"Select Coffee\"\n                [required]=\"true\" (onChange)=\"CalculatePrice($event)\">\n            </p-dropdown>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"from-grop col-md-4\">\n            <!-- <label>SELECT COFFEE</label><br>\n            <p-dropdown id=\"item\" [options]=\"itemsList\" [style]=\"{'width':'100%'}\"\n                optionLabel=\"varItemName\" optionValue=\"numGoodsTypeID\" name=\"item\"\n                [(ngModel)]=\"service.formData.numGoodsTypeID\" placeholder=\"Select Coffee\"\n                [required]=\"true\" (onChange)=\"CalculatePrice($event)\">\n            </p-dropdown> -->\n        </div>\n        <div class=\"form-group col-md-4\">\n            <label>Weight<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control \" placeholder=\"KG...\" name=\"numWeight\"\n            #numWeight=\"ngModel\" [(ngModel)]=\"service.formData.numWeight\"\n            required [class.invalid]=\"numWeight.invalid &#038;&#038; numWeight.touched\">\n        </div>\n        <div class=\"form-group col-md-4\">\n            <label>Price<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control \" placeholder=\"numPrice...\" name=\"numPrice\"\n                #numPrice=\"ngModel\" [(ngModel)]=\"service.formData.numPrice\"\n                required [class.invalid]=\"numPrice.invalid &#038;&#038; numPrice.touched\">\n        </div>\n        <div class=\"form-group col-md-4\">\n            <label>Weight<sup class=\"text-danger\">*</sup></label>\n            <input class=\"form-control \" placeholder=\"KG...\" name=\"numWeight\"\n            #numWeight=\"ngModel\" [(ngModel)]=\"service.formData.numWeight\"\n            required [class.invalid]=\"numWeight.invalid &#038;&#038; numWeight.touched\">\n        </div>\n    </div>\n\n\n\n    <div class=\"form-group\">\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"form.invalid\">SUBMIT</button>\n    </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}