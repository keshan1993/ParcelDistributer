{"ast":null,"code":"import { SubSink } from 'subsink';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./booking.service\";\nimport * as i2 from \"ngx-toastr\";\nexport class BookingComponent {\n  constructor(service, toaster) {\n    this.service = service;\n    this.toaster = toaster;\n    this.subs = new SubSink();\n  }\n  ngOnInit() {\n    this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n      this.service.list = response.Bookings;\n    });\n  }\n  populateForm(selectedRecord) {\n    this.service.formData = Object.assign({}, selectedRecord);\n  }\n  onDelete(numBookingID) {\n    if (confirm('Are You Sure To Delete This Booking ?')) {\n      this.service.DeleteBooking(numBookingID).subscribe(res => {\n        this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n          this.service.list = response.bookings;\n        });\n        this.toaster.error('Successfully Deleted.', 'Booking Details');\n      }, err => {\n        console.log(err);\n      });\n    }\n  }\n}\nBookingComponent.ɵfac = function BookingComponent_Factory(t) {\n  return new (t || BookingComponent)(i0.ɵɵdirectiveInject(i1.BookingService), i0.ɵɵdirectiveInject(i2.ToastrService));\n};\nBookingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BookingComponent,\n  selectors: [[\"app-booking\"]],\n  decls: 2,\n  vars: 0,\n  template: function BookingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"booking works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAGA,SAASA,OAAO,QAAQ,SAAS;;;;AAQjC,OAAM,MAAOC,gBAAgB;EAI3BC,YAAmBC,OAAuB,EAAUC,OAAsB;IAAvD,YAAO,GAAPD,OAAO;IAA0B,YAAO,GAAPC,OAAO;IAF3D,SAAI,GAAG,IAAIJ,OAAO,EAAE;EAE0D;EAE9EK,QAAQ;IACN,IAAI,CAACC,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,OAAO,CAACK,iBAAiB,EAAE,CAACC,SAAS,CAACC,QAAQ,IAAG;MACrE,IAAI,CAACP,OAAO,CAACQ,IAAI,GAAGD,QAAQ,CAACE,QAAQ;IACvC,CAAC,CAAC;EACJ;EAEAC,YAAY,CAACC,cAAuB;IAClC,IAAI,CAACX,OAAO,CAACY,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEH,cAAc,CAAC;EAC3D;EAEAI,QAAQ,CAACC,YAAoB;IAC3B,IAAIC,OAAO,CAAC,uCAAuC,CAAC,EAAE;MACpD,IAAI,CAACjB,OAAO,CAACkB,aAAa,CAACF,YAAY,CAAC,CACrCV,SAAS,CAACa,GAAG,IAAG;QACf,IAAI,CAAChB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,OAAO,CAACK,iBAAiB,EAAE,CAACC,SAAS,CAACC,QAAQ,IAAG;UACrE,IAAI,CAACP,OAAO,CAACQ,IAAI,GAAGD,QAAQ,CAACa,QAAQ;QACvC,CAAC,CAAC;QACF,IAAI,CAACnB,OAAO,CAACoB,KAAK,CAAC,uBAAuB,EAAE,iBAAiB,CAAC;MAChE,CAAC,EACDC,GAAG,IAAG;QAAGC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAE,CAAC,CAAC;;EAEnC;;AA3BWxB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAA2B;EAAAC;EAAAC;EAAAC;IAAA;MCX7BC,yBAAG;MAAAA,8BAAc;MAAAA,iBAAI","names":["SubSink","BookingComponent","constructor","service","toaster","ngOnInit","subs","sink","GetBookingDetails","subscribe","response","list","Bookings","populateForm","selectedRecord","formData","Object","assign","onDelete","numBookingID","confirm","DeleteBooking","res","bookings","error","err","console","log","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\ESyAdmin\\Desktop\\QualitApps\\ParcelDistributer\\ParcelDistribute.Client\\src\\app\\booking\\booking.component.ts","C:\\Users\\ESyAdmin\\Desktop\\QualitApps\\ParcelDistributer\\ParcelDistribute.Client\\src\\app\\booking\\booking.component.html"],"sourcesContent":["import { Component, OnInit  } from '@angular/core';\nimport { Booking } from './booking.model';\nimport { BookingService } from './booking.service';\nimport { SubSink } from 'subsink';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-booking',\n  templateUrl: './booking.component.html',\n  styles: [\n  ]\n})\nexport class BookingComponent implements OnInit {\n\n  subs = new SubSink();\n\n  constructor(public service: BookingService, private toaster: ToastrService) { }\n\n  ngOnInit() {\n    this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n      this.service.list = response.Bookings;\n    });\n  }\n\n  populateForm(selectedRecord: Booking) {\n    this.service.formData = Object.assign({}, selectedRecord);\n  }\n\n  onDelete(numBookingID: number) {\n    if (confirm('Are You Sure To Delete This Booking ?')) {\n      this.service.DeleteBooking(numBookingID)\n        .subscribe(res => {\n          this.subs.sink = this.service.GetBookingDetails().subscribe(response => {\n            this.service.list = response.bookings;\n          });\n          this.toaster.error('Successfully Deleted.', 'Booking Details');\n        },\n        err => { console.log(err); })\n    }\n  }\n}\n","<p>booking works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}